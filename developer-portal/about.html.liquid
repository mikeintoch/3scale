<div class="container">
      <div class="landing-container">
        
        <h1>Red Hat's Open Banking Vision</h1>
        	<p>This page will introduce the following four topics on a high level and then refer to corresponding subpages:</p>
        	
		<h2>Red Hat</h2>        
            <p>Open source, open banking and open APIs are not necessarily strictly connected. Red Hat is well know for the unique open source based development model. It is very beneficial but also very hard to get right. The main benefits for customers of open source based products, which are fuelled by on a large and active community, are transparency, security and speed. This is why more and more open source based products evolve on the market -- not just in banking. (more about <a href>Red Hat</a>)</p>        
        
		<h2>Open Banking Use Cases</h2>        
            <p>A paragraph of description. (more about <a href>Open Banking Use Cases</a>)</p>    
        
		<h2>Red Hatâ€™s Agile Integration Concept</h2>        
            <p>Since 2011 the number of regulations a bank needs to comply with has tripled on a global level. Complying with regulations is costly, risky and can have serious impact on a bank's business. This impact, however, can go both ways. Banks have a choice about how to comply with regulations such as PSD2 in Europe. They can either do the bare minimum, which on first sight may appear to be cheaper. But banks may inadvertently set themselves up for irrelevance by becoming a service provider who has to compete on price with little or no customer engagement. Or a bank can embrace the regulations and approach them head on with the strategic objective to become the bank central to everyday life based on a future proof banking platform business model.</p> 

<p>The main idea, which all these regulations have in common, is to enforce more openness and higher security, which should enable more competition -- ultimately leading to improved customer service quality. This is also referred to as <b>open banking</b>.</p> 

<p>It is by now commonly accepted that opening up banking assets, such as data or services, in a controlled and managed way, is best achieved by using application programming interfaces (APIs) and API management technology. Building an open banking platform centered around API management can lead to a whole range of strategic benefits for banks such as, increased agility, increased rate of innovation, existing data or services can be leveraged more effectively, ecosystems with partners and customers can be established faster, more effective integration with diverse set of different apps (mobile, IoT, bots etc), generation of new business models, and probably the most attractive one: new revenue opportunities can be generated directly or indirectly via access to APIs.</p>

<p>This is the vision. But achieving this is not a straightforward task requiring some fundamental changes with respect to internal processes, culture, technological and architectural approaches to build out the required capabilities. Some of most critical capabilities include: </p>

<ul>        
<li>Controlled openness so that the bank knows who does what with their data</li>
<li>Agility to create new services quickly based on market demand</li>
<li>Consolidated, consistent and controlled security and access model including identity management</li>
<li>Flexible approach to integration that must support all modern integration patterns and protocols but at the same time allow effective integration with legacy systems and never become a central bottleneck</li>
<li>On-demand scalability to cover application request peaks</li>
<li>Continuous integration and delivery and automatable lifecycle management</li>
<li>System-wide business monitoring, reporting and alerting</li>
</ul>
        
<p>To achieve this solution architecture of the Red Hat Open Banking platform resides on the principles of <a href=https://www.redhat.com/en/engage/agile-integration-devops-containers-20180614>Agile Integration</a>. Agile Integration addresses typical integration challenges with an architectural approach centered around APIs and the concept of <i>API management-as-code</i> where everything is an API and, thus, can be fully automated. Furthermore, integration logic is designed to be distributed and containerized. </p>

<p>This is a fundamentally different approach to the traditional way of building, integrating and deploying software systems. In the past, such systems were typically built as a centralised, monolithic application hosted in an on-premise data center, which is inflexible, inefficient and expensive. Agile integration allows to build containerized cloud-native applications and deploy them in hybrid cloud infrastructures that span on-premise data centers as well as private or public clouds and allow on demand scaling. </p>
              
        
		<h2>Open Banking Reference Implementation</h2>        
            <p>A paragraph of description. (more about <a href>Reference Implementation</a>)</p>     
        
                         
       
       </div>
</div>